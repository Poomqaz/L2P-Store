
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.BookScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  description: 'description',
  isbn: 'isbn',
  createdAt: 'createdAt',
  image: 'image',
  category: 'category',
  qty: 'qty',
  status: 'status',
  averageRating: 'averageRating',
  reviewCount: 'reviewCount'
};

exports.Prisma.ImportToStockScalarFieldEnum = {
  id: 'id',
  bookid: 'bookid',
  qty: 'qty',
  createdAt: 'createdAt',
  updateAt: 'updateAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  password: 'password',
  level: 'level',
  status: 'status'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  phone: 'phone',
  username: 'username',
  password: 'password',
  status: 'status',
  address: 'address',
  name: 'name',
  profileImage: 'profileImage',
  points: 'points',
  email: 'email'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  bookId: 'bookId',
  memberId: 'memberId',
  qty: 'qty'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  createdAt: 'createdAt',
  slipImage: 'slipImage',
  status: 'status',
  trackCode: 'trackCode',
  express: 'express',
  remark: 'remark',
  customerName: 'customerName',
  customerAddress: 'customerAddress',
  customerPhone: 'customerPhone',
  total: 'total'
};

exports.Prisma.OrderDetailScalarFieldEnum = {
  id: 'id',
  bookId: 'bookId',
  price: 'price',
  qty: 'qty',
  orderId: 'orderId'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  total: 'total',
  cashPaid: 'cashPaid',
  change: 'change',
  pointUsed: 'pointUsed',
  paymentMethod: 'paymentMethod',
  remark: 'remark',
  adminId: 'adminId',
  memberId: 'memberId'
};

exports.Prisma.SaleDetailScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  bookId: 'bookId',
  qty: 'qty',
  price: 'price'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  bookId: 'bookId',
  memberId: 'memberId',
  rating: 'rating',
  comment: 'comment',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Book: 'Book',
  ImportToStock: 'ImportToStock',
  Admin: 'Admin',
  Member: 'Member',
  Cart: 'Cart',
  Order: 'Order',
  OrderDetail: 'OrderDetail',
  Sale: 'Sale',
  SaleDetail: 'SaleDetail',
  Review: 'Review'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Next_bun_4Day\\Bun_Elysia\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Next_bun_4Day\\Bun_Elysia\\app\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n// bunx prisma generate\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// สินค้า\nmodel Book {\n  id            String          @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name          String\n  price         Int\n  description   String?\n  isbn          String?         @unique\n  createdAt     DateTime?       @default(now())\n  image         String?\n  carts         Cart[]\n  category      String?\n  qty           Int             @default(0)\n  status        String          @default(\"active\")\n  OrderDetails  OrderDetail[]\n  ImportToStock ImportToStock[]\n  saleDetails   SaleDetail[]\n  Review        Review[]\n  averageRating Float           @default(0.0)\n  reviewCount   Int             @default(0)\n}\n\nmodel ImportToStock {\n  id        String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  bookid    String    @db.ObjectId\n  qty       Int\n  Book      Book      @relation(fields: [bookid], references: [id])\n  createdAt DateTime? @default(now())\n  updateAt  DateTime? @updatedAt\n}\n\nmodel Admin {\n  id       String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name     String\n  username String @unique\n  password String\n  level    String @default(\"admin\")\n  status   String @default(\"active\")\n  sales    Sale[]\n}\n\nmodel Member {\n  id           String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  phone        String\n  username     String   @unique\n  password     String\n  status       String   @default(\"active\")\n  sales        Sale[]\n  address      String?\n  name         String?\n  Orders       Order[]\n  profileImage String?\n  points       Int      @default(0)\n  email        String   @unique\n  Review       Review[]\n}\n\nmodel Cart {\n  id       String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  bookId   String @db.ObjectId\n  memberId String\n  qty      Int\n  book     Book   @relation(fields: [bookId], references: [id])\n}\n\nmodel Order {\n  id              String        @id @default(auto()) @map(\"_id\") @db.ObjectId\n  memberId        String        @db.ObjectId\n  createdAt       DateTime\n  Member          Member        @relation(fields: [memberId], references: [id])\n  slipImage       String\n  status          String        @default(\"\") // cancel, paid, transfer\n  trackCode       String        @default(\"\")\n  express         String        @default(\"\")\n  remark          String        @default(\"\")\n  customerName    String\n  customerAddress String\n  customerPhone   String\n  OrderDetail     OrderDetail[]\n  total           Int           @default(0)\n}\n\nmodel OrderDetail {\n  id      String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  bookId  String @db.ObjectId\n  Book    Book   @relation(fields: [bookId], references: [id])\n  price   Int\n  qty     Int\n  orderId String @db.ObjectId\n  Order   Order  @relation(fields: [orderId], references: [id])\n}\n\nmodel Sale {\n  id            String       @id @default(auto()) @map(\"_id\") @db.ObjectId\n  createdAt     DateTime     @default(now())\n  total         Int\n  cashPaid      Float        @default(0) // ยอดเงินสดที่ลูกค้าจ่าย\n  change        Float        @default(0) // เงินทอน\n  pointUsed     Int          @default(0) // แต้มที่ลูกค้าใช้ในรายการนี้\n  paymentMethod String\n  remark        String?\n  adminId       String       @db.ObjectId\n  admin         Admin        @relation(fields: [adminId], references: [id])\n  memberId      String?      @db.ObjectId\n  member        Member?      @relation(fields: [memberId], references: [id])\n  details       SaleDetail[]\n}\n\nmodel SaleDetail {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  saleId String @db.ObjectId\n  sale   Sale   @relation(fields: [saleId], references: [id])\n  bookId String @db.ObjectId\n  book   Book   @relation(fields: [bookId], references: [id])\n  qty    Int\n  price  Int\n}\n\nmodel Review {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  bookId    String   @db.ObjectId\n  book      Book     @relation(fields: [bookId], references: [id])\n  memberId  String   @db.ObjectId\n  member    Member   @relation(fields: [memberId], references: [id])\n  rating    Int\n  comment   String?\n  updatedAt DateTime @updatedAt\n  createdAt DateTime @default(now())\n\n  @@unique([bookId, memberId])\n}\n",
  "inlineSchemaHash": "87f794bd2f3584e8a5cb0fa937f3960feaa9021c8d9357f603734b41b0bfbb11",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Book\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isbn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"BookToCart\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"OrderDetails\",\"kind\":\"object\",\"type\":\"OrderDetail\",\"relationName\":\"BookToOrderDetail\"},{\"name\":\"ImportToStock\",\"kind\":\"object\",\"type\":\"ImportToStock\",\"relationName\":\"BookToImportToStock\"},{\"name\":\"saleDetails\",\"kind\":\"object\",\"type\":\"SaleDetail\",\"relationName\":\"BookToSaleDetail\"},{\"name\":\"Review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"BookToReview\"},{\"name\":\"averageRating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reviewCount\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"ImportToStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"bookid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToImportToStock\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"AdminToSale\"}],\"dbName\":null},\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"MemberToSale\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"MemberToOrder\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"MemberToReview\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToCart\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrder\"},{\"name\":\"slipImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"express\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"OrderDetail\",\"kind\":\"object\",\"type\":\"OrderDetail\",\"relationName\":\"OrderToOrderDetail\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"OrderDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToOrderDetail\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderDetail\"}],\"dbName\":null},\"Sale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cashPaid\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"change\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pointUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remark\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToSale\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToSale\"},{\"name\":\"details\",\"kind\":\"object\",\"type\":\"SaleDetail\",\"relationName\":\"SaleToSaleDetail\"}],\"dbName\":null},\"SaleDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToSaleDetail\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToSaleDetail\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToReview\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToReview\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

