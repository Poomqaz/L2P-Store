'use client'

import { Config } from "@/app/config"
import axios from "axios"
import { useEffect, useState, useCallback } from "react"
import { useRouter } from 'next/navigation'
import Swal from "sweetalert2"
import { BookInterface } from "@/app/interface/BookInterface"
import { MemberInterface } from "@/app/interface/MemberInterface"
import { CartItemInterface } from "@/app/interface/CartItemInterface"

// -------------------------------------------------------------------------
// ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÉ‡∏ä‡πâ Pick ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Type ‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà API ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
// -------------------------------------------------------------------------
type MemberSearchInfo = Pick<
    MemberInterface, 
    'id' | 'name' | 'email' | 'phone' | 'points'
>;

export default function POSSystem() {
    const router = useRouter()
    
    // ---- State Management ----
    // ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 2: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô State ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ MemberSearchInfo ‡πÅ‡∏ó‡∏ô MemberInterface ‡∏ï‡∏±‡∏ß‡πÄ‡∏ï‡πá‡∏°
    const [selectedMember, setSelectedMember] = useState<MemberSearchInfo | null>(null)
    const [memberSearch, setMemberSearch] = useState('')
    const [bookSearch, setBookSearch] = useState('')
    const [books, setBooks] = useState<BookInterface[]>([])
    const [cart, setCart] = useState<CartItemInterface[]>([]) 
    const [paymentMethod, setPaymentMethod] = useState<'cash' | 'transfer'>('cash')
    const [pointsToRedeem, setPointsToRedeem] = useState(0)
    const [loading, setLoading] = useState(false)
    const [error, setError] = useState('')
    const [success, setSuccess] = useState('')
    const [cashPaid, setCashPaid] = useState<number | ''>('') 

    // ---- Authentication Functions ----
    const createAuthenticatedAxios = () => {
        const token = localStorage.getItem(Config.tokenName);
        
        if (!token) {
            throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö token ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà');
        }
        
        return axios.create({
            baseURL: Config.apiUrl,
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });
    };
    
    const handleAuthError = (err: unknown): boolean => { 
        
        // 1. ‡πÉ‡∏ä‡πâ Type Guard ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AxiosError ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        //    ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà AxiosError ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ response (‡πÄ‡∏ä‡πà‡∏ô network error ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á) 
        //    ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö status ‡πÑ‡∏î‡πâ ‡∏à‡∏∂‡∏á return false ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        if (axios.isAxiosError(err) && err.response) { 
            
            // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö HTTP Status Code 401
            if (err.response.status === 401) {
                
                // ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
                localStorage.removeItem(Config.tokenName);
                
                Swal.fire({
                    title: '‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏',
                    text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà',
                    icon: 'warning',
                    confirmButtonText: '‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'
                }).then(() => {
                    // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ 'router' ‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô prop/hook
                    router.push('/signin'); 
                });
                
                return true; // ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß
            }
        }
        
        // 3. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 401 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Axios Error ‡πÉ‡∏´‡πâ return false
        return false;
    };

    // ---- Utility Functions ----
    const showError = (message: string) => {
        setError(message)
        setSuccess('')
    }
    
    const showSuccess = (message: string) => {
        setSuccess(message)
        setError('')
    }

    const clearMessages = () => {
        setError('')
        setSuccess('')
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - ‡πÉ‡∏ä‡πâ useCallback ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
    const calculateTotal = useCallback(() => {
        const subtotal = cart.reduce((sum, item) => sum + (item.price * item.qty), 0)
        
        const memberPoints = selectedMember?.points ?? 0;
        // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° (subtotal) ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ
        const maxPointsToRedeem = Math.min(memberPoints, subtotal)
        // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà redeem ‡πÑ‡∏î‡πâ
        const actualPointsToRedeem = Math.min(pointsToRedeem, maxPointsToRedeem) 
        
        const discount = actualPointsToRedeem // ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
        const total = subtotal - discount
        
        return {
            subtotal,
            discount,
            total: Math.max(0, total), 
            maxRedeemablePoints: maxPointsToRedeem
        }
    }, [cart, pointsToRedeem, selectedMember]) 

    const { subtotal, discount, total, maxRedeemablePoints } = calculateTotal()
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    const change = typeof cashPaid === 'number' && total > 0 && cashPaid >= total
        ? cashPaid - total
        : 0

    // ---- Effects ----
    useEffect(() => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡πÇ‡∏´‡∏•‡∏î
        const token = localStorage.getItem(Config.tokenName);
        if (!token) {
            Swal.fire({
                title: '‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
                text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö POS',
                icon: 'warning',
                confirmButtonText: '‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'
            }).then(() => {
                router.push('/signin');
            });
        }
    }, [router]);

    useEffect(() => {
        // ‡∏´‡∏≤‡∏Å pointsToRedeem ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏•‡∏á‡∏°‡∏≤
        if (pointsToRedeem > maxRedeemablePoints) {
            if (pointsToRedeem > 0) {
                 // üí° ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô error ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô 0
                 setPointsToRedeem(0)
                 if(cart.length > 0) showError('‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ï‡πâ‡∏°‡∏´‡∏°‡∏î') 
            }
        }
    }, [cart.length, selectedMember, pointsToRedeem, maxRedeemablePoints]) 

    useEffect(() => {
        // ‡∏õ‡∏£‡∏±‡∏ö cashPaid ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô
        if (paymentMethod === 'transfer') {
            // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
            setCashPaid(total);
        } else if (paymentMethod === 'cash' && typeof cashPaid === 'number' && cashPaid < total) {
            // ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ (‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô total)
            setCashPaid(''); 
        }
    }, [paymentMethod, total]);
    

    // ---- API Functions ----

    const searchMember = async (query: string) => {
        const trimmedQuery = query.trim()
        if (!trimmedQuery) {
            showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•')
            return
        }

        setLoading(true)
        clearMessages()
        setSelectedMember(null) 

        try {
            const url = Config.apiUrl + `/api/sale/search/member?q=${encodeURIComponent(trimmedQuery)}`
            const response = await axios.get(url)

            if (response.status === 200 && response.data?.id) {
                // ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 3: Type Assert ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å API ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô MemberSearchInfo
                const memberData = response.data as MemberSearchInfo 

                // ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô setSelectedMember ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ error ‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                setSelectedMember({
                    id: memberData.id,
                    name: memberData.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠',
                    email: memberData.email,
                    phone: memberData.phone,
                    points: memberData.points || 0
                })
                showSuccess(`‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ${memberData.name || memberData.phone}`)
            } else {
                showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å')
                setSelectedMember(null)
            }
        } catch (err: unknown) { // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô unknown ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ TypeScript ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏ô‡∏¥‡∏î
                // 1. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
            // (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ handleAuthError ‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö err: unknown ‡πÅ‡∏•‡πâ‡∏ß)
            if (handleAuthError(err)) return; 
            
            let displayMessage: string;
            const defaultError = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏';

            // 2. ‡πÉ‡∏ä‡πâ Type Guard ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AxiosError
            if (axios.isAxiosError(err)) {
                
                // ‡πÉ‡∏ä‡πâ Optional Chaining ‡πÅ‡∏•‡∏∞ Type Assertion ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
                // { message?: string, error?: string } ‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
                const serverData = err.response?.data as { message?: string, error?: string };
                
                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:
                // 1. message ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                // 2. error ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                // 3. message ‡∏Ç‡∏≠‡∏á AxiosError (‡πÄ‡∏ä‡πà‡∏ô Network Error)
                displayMessage = serverData?.message 
                    || serverData?.error 
                    || err.message 
                    || defaultError;

            } else if (err instanceof Error) {
                // 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ JavaScript Error ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
                displayMessage = err.message;
            } else {
                // 4. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ unknown error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
                displayMessage = defaultError;
            }
            
            // 5. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            showError(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ: ${displayMessage}`);
            setSelectedMember(null);
        } finally {
            setLoading(false)
        }
    }

    const searchBooks = async (query: string) => {
        const trimmedQuery = query.trim()
        if (!trimmedQuery) {
            setBooks([])
            return
        }

        setLoading(true)
        clearMessages()

        try {
            const url = Config.apiUrl + `/api/sale/search/book?q=${encodeURIComponent(trimmedQuery)}`
            const response = await axios.get(url)

            const activeBooks = Array.isArray(response.data)
                ? response.data.filter((book: BookInterface) => book.status === 'active' && book.qty > 0)
                : []

            setBooks(activeBooks)

            if (activeBooks.length === 0) {
                if (trimmedQuery) {
                    showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏´‡∏°‡∏î')
                }
            }
        } catch (err: unknown) { // ‡πÉ‡∏ä‡πâ unknown ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ TypeScript ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏ô‡∏¥‡∏î
            // 1. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ handleAuthError ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
            if (handleAuthError(err)) return; 
            
            let displayMessage: string;
            const defaultError = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏';

            // 2. ‡πÉ‡∏ä‡πâ Type Guard ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AxiosError
            if (axios.isAxiosError(err)) {
                
                // ‡πÉ‡∏ä‡πâ Optional Chaining ‡πÅ‡∏•‡∏∞ Type Assertion ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                const serverData = err.response?.data as { message?: string, error?: string };
                
                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: 
                // 1. message ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                // 2. error ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏ä‡πâ key ‡∏ß‡πà‡∏≤ 'error')
                // 3. message ‡∏Ç‡∏≠‡∏á AxiosError (‡πÄ‡∏ä‡πà‡∏ô Network Error)
                displayMessage = serverData?.message 
                    || serverData?.error 
                    || err.message 
                    || defaultError;

            } else if (err instanceof Error) {
                // 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ JavaScript Error ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
                displayMessage = err.message;
            } else {
                // 4. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ unknown error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
                displayMessage = defaultError;
            }
            
            // 5. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            showError(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏î‡πâ: ${displayMessage}`);
            setBooks([]);
        } finally {
            setLoading(false)
        }
    }

    /**
      * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Process Sale ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á Authorization Header
      */
    const processSale = async () => {
        if (cart.length === 0) {
            showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤')
            return
        }
        
        if (total <= 0) {
            showError('‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£')
            return
        }

        if (paymentMethod === 'cash' && (typeof cashPaid !== 'number' || cashPaid < total)) {
            showError(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏£‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏ø${total.toFixed(2)}`)
            return
        }

        const saleData = {
            memberId: selectedMember?.id || null,
            paymentMethod,
            items: cart.map(item => ({
                bookId: item.bookId,
                qty: item.qty,
            })),
            pointsToRedeem: pointsToRedeem,
            // ‡πÉ‡∏ô server side controller ‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cashPaid ‡∏Å‡∏±‡∏ö total ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
            cashPaid: paymentMethod === 'cash' && typeof cashPaid === 'number' ? cashPaid : total 
        }

        setLoading(true)
        clearMessages()

        try {
            // ‡πÉ‡∏ä‡πâ authenticated axios instance
            const authenticatedAxios = createAuthenticatedAxios();
            const response = await authenticatedAxios.post('/api/sale/create', saleData);

            if (response.status === 201 || response.status === 200) {
                const saleResult = response.data.data
                
                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å cashPaid ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á (‡πÉ‡∏ô state)
                const finalChange = paymentMethod === 'cash' && typeof cashPaid === 'number' && cashPaid > total
                    ? cashPaid - total
                    : 0;

                Swal.fire({
                    title: '‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
                    html: `
                        <p>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•: <strong>${saleResult.id || 'N/A'}</strong></p>
                        <p>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: <strong>‡∏ø${saleResult.total.toLocaleString(undefined, { minimumFractionDigits: 2 })}</strong></p>
                        ${saleResult.earnedPoints > 0 ? `<p class="text-green-600">‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πâ‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°: +${saleResult.earnedPoints.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°</p>` : ''}
                        ${saleResult.newPoints !== undefined ? `<p class="text-blue-600">‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡πÉ‡∏´‡∏°‡πà: ${saleResult.newPoints.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°</p>` : ''}
                        ${paymentMethod === 'cash' && finalChange > 0 ? `<p class="text-xl text-green-700 font-bold mt-2">‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ‡∏ø${finalChange.toLocaleString(undefined, { minimumFractionDigits: 2 })}</p>` : ''}
                    `,
                    icon: 'success',
                    confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á'
                })

                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï State ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ï‡πâ‡∏°‡πÉ‡∏´‡∏°‡πà
                if (selectedMember && saleResult?.newPoints !== undefined) {
                    // ‡πÉ‡∏ä‡πâ Type Assertion ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ TypeScript ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Field ‡∏¢‡πà‡∏≠‡∏¢
                    setSelectedMember({
                        ...selectedMember,
                        points: saleResult.newPoints
                    } as MemberSearchInfo) 
                }
                
                resetForm()
            }
        } catch (err: unknown) { // ‡∏£‡∏±‡∏ö err ‡πÄ‡∏õ‡πá‡∏ô unknown
            // ‡∏´‡∏≤‡∏Å handleAuthError ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ (false) ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
            if (handleAuthError(err)) return;
                
            let errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏';

            // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Axios Error ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô (Type Guard)
            if (axios.isAxiosError(err)) { 

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                if (err.message === '‡πÑ‡∏°‡πà‡∏û‡∏ö token ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà') {
                    // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ router ‡∏ñ‡∏π‡∏Å import ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    // (‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô catch block ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà)
                    router.push('/signin');
                    return;
                }

                // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å response (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                if (err.response?.data?.message) {
                    // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AxiosError
                    errorMessage = err.response.data.message; 
                } else if (err.message) {
                    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Error object (‡πÄ‡∏ä‡πà‡∏ô Network Error, Timeout)
                    errorMessage = err.message;
                }

            } else if (err instanceof Error) {
                // 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ JavaScript Error ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
                errorMessage = err.message;
            }

            // 4. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            Swal.fire({
                title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                text: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ: ${errorMessage}`,
                icon: 'error'
            });
        } finally {
            setLoading(false)
        }
    }

    const resetForm = () => {
        setCart([])
        setPointsToRedeem(0)
        setBooks([])
        setBookSearch('')
        setMemberSearch('')
        // üí° ‡πÑ‡∏°‡πà‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï selectedMember ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
        // setSelectedMember(null) 
        setPaymentMethod('cash')
        setCashPaid('')
        clearMessages()
    }

    // ---- Cart and Points Logic ----

    /**
      * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
      * @param book BookInterface ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°
      */
    const addToCart = (book: BookInterface) => { 
        if (book.qty <= 0) {
            showError('‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î')
            return
        }

        const existingItem = cart.find(item => item.bookId === book.id)

        if (existingItem) {
            const newQty = existingItem.qty + 1
            if (newQty <= book.qty) {
                setCart(cart.map(item =>
                    item.bookId === book.id
                        ? { ...item, qty: newQty }
                        : item
                ))
                showSuccess(`‡πÄ‡∏û‡∏¥‡πà‡∏° ${book.name} ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß (${newQty} ‡πÄ‡∏•‡πà‡∏°)`)
            } else {
                showError(`‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${book.qty} ‡πÄ‡∏•‡πà‡∏°)`)
            }
        } else {
            // ‡πÉ‡∏ä‡πâ CartItemInterface
            const newItem: CartItemInterface = { 
                bookId: book.id,
                name: book.name,
                price: book.price,
                qty: 1,
                maxQty: book.qty,
            }
            setCart([...cart, newItem])
            showSuccess(`‡πÄ‡∏û‡∏¥‡πà‡∏° ${book.name} ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß`)
        }
    }

    /**
      * ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
      * @param bookId string ID ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
      * @param newQty number ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡∏°‡πà
      */
    const updateCartQty = (bookId: string, newQty: number) => {
        setCart(prevCart => {
            const updatedCart = prevCart.map(item => {
                if (item.bookId === bookId) {
                    const validQty = Math.max(0, Math.min(newQty, item.maxQty))
                    
                    if (validQty < newQty && newQty > 0) {
                        showError(`‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${item.maxQty} ‡πÄ‡∏•‡πà‡∏°)`)
                    }
                    
                    return { ...item, qty: validQty }
                }
                return item
            }).filter(item => item.qty > 0) 

            const removedItem = prevCart.find(item => item.bookId === bookId && newQty <= 0)
            if (removedItem && removedItem.qty > 0) {
                showSuccess(`‡∏•‡∏ö ${removedItem.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß`)
            }
            
            return updatedCart
        })
    }
    
    const removeFromCart = (bookId: string) => {
        const item = cart.find(item => item.bookId === bookId)
        setCart(cart.filter(item => item.bookId !== bookId))
        if (item) {
            showSuccess(`‡∏•‡∏ö ${item.name} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß`)
        }
    }

    const handlePointsChange = (points: string) => {
        if (!selectedMember) {
            showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πà‡∏≠‡∏ô')
            setPointsToRedeem(0)
            return
        }

        const numPoints = Math.max(0, parseInt(points) || 0)
        
        if (numPoints > maxRedeemablePoints) {
            showError(`‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${maxRedeemablePoints.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°`)
            setPointsToRedeem(maxRedeemablePoints)
            return
        }
        
        if (numPoints > (selectedMember?.points ?? 0)) {
            showError(`‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏°‡πà‡∏û‡∏≠ (‡∏°‡∏µ ${selectedMember?.points?.toLocaleString() ?? 0} ‡πÅ‡∏ï‡πâ‡∏°)`)
            setPointsToRedeem(selectedMember?.points ?? 0)
            return
        }

        setPointsToRedeem(numPoints)
        if (numPoints === 0 && pointsToRedeem !== 0) {
            showSuccess('‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡πÅ‡∏•‡πâ‡∏ß')
        }
    }

    const useAllPoints = () => {
        if (!selectedMember) {
            showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πà‡∏≠‡∏ô')
            return
        }
        
        if (maxRedeemablePoints > 0) {
            setPointsToRedeem(maxRedeemablePoints)
            showSuccess(`‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${maxRedeemablePoints.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°`)
        } else {
            showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡πÑ‡∏î‡πâ (‡∏¢‡∏≠‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ï‡πâ‡∏°‡∏´‡∏°‡∏î)')
        }
    }

    // ---- Effects for Auto Search & Auto Clear Messages ----
    useEffect(() => {
        const timeoutId = setTimeout(() => {
            if (bookSearch.trim()) {
                searchBooks(bookSearch)
            } else {
                setBooks([])
            }
        }, 500)

        return () => clearTimeout(timeoutId)
    }, [bookSearch])

    useEffect(() => {
        if (success || error) {
            const timeoutId = setTimeout(clearMessages, 4000)
            return () => clearTimeout(timeoutId)
        }
    }, [success, error])
    
    // ---- JSX Component Return ----
    return (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-8">
            <div className="max-w-7xl mx-auto px-4">
                {/* Header */}
                <div className="text-center mb-8">
                    <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
                        ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô (POS)
                    </h1>
                    <p className="text-gray-600">Point of Sale System</p>
                </div>

                {/* Alert Messages */}
                {(error || success) && (
                    <div className={`mb-6 p-4 rounded-2xl flex items-center gap-3 shadow-lg ${
                        error
                            ? 'bg-gradient-to-r from-red-50 to-red-100 text-red-700 border border-red-200'
                            : 'bg-gradient-to-r from-green-50 to-green-100 text-green-700 border border-green-200'
                    }`}>
                        <i className={`fa ${error ? 'fa-exclamation-triangle' : 'fa-check-circle'} flex-shrink-0`}></i>
                        <span className="flex-1 font-medium">{error || success}</span>
                        <button
                            onClick={clearMessages}
                            className="text-2xl hover:bg-white hover:bg-opacity-50 rounded-full w-8 h-8 flex items-center justify-center transition-colors duration-200 text-gray-500"
                        >
                            &times;
                        </button>
                    </div>
                )}

                <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    {/* Left Panel - Search */}
                    <div className="lg:col-span-2 space-y-8">
                        {/* Member Search */}
                        <div className="bg-white rounded-2xl shadow-xl p-8">
                            <div className="flex items-center mb-6">
                                <div className="bg-gradient-to-r from-blue-500 to-purple-600 p-3 rounded-full mr-4">
                                    <i className="fa fa-user text-white text-xl"></i>
                                </div>
                                <h2 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                                    ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                                </h2>
                            </div>
                            
                            <div className="flex gap-3 mb-6">
                                <input
                                    type="text"
                                    placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•..."
                                    className="flex-1 px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:outline-none transition-colors duration-200 bg-gray-50 focus:bg-white"
                                    value={memberSearch}
                                    onChange={(e) => setMemberSearch(e.target.value)}
                                    onKeyPress={(e) => e.key === 'Enter' && searchMember(memberSearch)}
                                />
                                <button
                                    onClick={() => searchMember(memberSearch)}
                                    className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl hover:from-blue-600 hover:to-blue-700 flex items-center gap-2 disabled:opacity-50 transition-all duration-200"
                                    disabled={loading || !memberSearch.trim()}
                                >
                                    <i className="fa fa-search"></i>
                                    {loading && memberSearch.trim() ? '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...' : '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤'}
                                </button>
                            </div>

                            {selectedMember && (
                                <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 rounded-2xl border border-blue-100">
                                    <div className="flex justify-between items-start">
                                        <div className="space-y-2">
                                            <h3 className="text-xl font-bold text-blue-800">{selectedMember.name}</h3>
                                            <p className="text-blue-600">
                                                <i className="fa fa-phone mr-2"></i>
                                                {selectedMember.phone}
                                            </p>
                                            {selectedMember.email && (
                                                <p className="text-blue-600">
                                                    <i className="fa fa-envelope mr-2"></i>
                                                    {selectedMember.email}
                                                </p>
                                            )}
                                            <div className="flex items-center text-yellow-600 bg-yellow-50 px-3 py-2 rounded-lg inline-block font-medium">
                                                <i className="fa fa-star mr-2"></i>
                                                <span className="font-bold">{selectedMember.points.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°</span>
                                            </div>
                                        </div>
                                        <button
                                            onClick={() => {
                                                setSelectedMember(null)
                                                setMemberSearch('')
                                                setPointsToRedeem(0)
                                                showSuccess('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß')
                                            }}
                                            className="text-xl text-blue-400 hover:text-blue-600 hover:bg-blue-100 rounded-full w-8 h-8 flex items-center justify-center transition-colors duration-200"
                                            title="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"
                                        >
                                            &times;
                                        </button>
                                    </div>
                                </div>
                            )}
                        </div>

                        {/* Book Search */}
                        <div className="bg-white rounded-2xl shadow-xl p-8">
                            <div className="flex items-center mb-6">
                                <div className="bg-gradient-to-r from-green-500 to-blue-500 p-3 rounded-full mr-4">
                                    <i className="fa fa-search text-white text-xl"></i>
                                </div>
                                <h2 className="text-2xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
                                    ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                                </h2>
                            </div>
                            
                            <input
                                type="text"
                                placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠, ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠ISBN..."
                                className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-green-500 focus:outline-none transition-colors duration-200 bg-gray-50 focus:bg-white mb-6"
                                value={bookSearch}
                                onChange={(e) => setBookSearch(e.target.value)}
                            />

                            <div className="space-y-3 max-h-96 overflow-y-auto">
                                {loading && bookSearch.trim() && (
                                    <div className="text-center py-8">
                                        <div className="animate-spin rounded-full h-8 w-8 border-2 border-blue-500 border-t-transparent mx-auto"></div>
                                        <p className="text-gray-500 mt-2">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...</p>
                                    </div>
                                )}
                                
                                {books.length === 0 && bookSearch.trim() && !loading && (
                                    <div className="text-center py-12">
                                        <div className="bg-gray-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-4">
                                            <i className="fa fa-book text-4xl text-gray-400"></i>
                                        </div>
                                        <p className="text-gray-500 text-lg">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
                                    </div>
                                )}
                                
                                {books.map((book) => (
                                    <div key={book.id} className="flex items-center gap-4 p-4 border border-gray-200 rounded-xl hover:bg-gray-50 transition-colors duration-200">
                                        <div className="w-16 h-16 rounded-lg overflow-hidden shadow-md flex-shrink-0">
                                            {book.image ? (
                                                <img 
                                                    src={Config.apiUrl + '/public/uploads/' + book.image} 
                                                    alt={book.name}
                                                    className="w-full h-full object-cover"
                                                />
                                            ) : (
                                                <div className="w-full h-full bg-gray-200 flex items-center justify-center">
                                                    <i className="fa fa-book text-gray-400"></i>
                                                </div>
                                            )}
                                        </div>
                                        <div className="flex-1">
                                            <h4 className="font-bold text-lg text-gray-800">{book.name}</h4>
                                            <p className="text-blue-600 font-semibold text-lg">
                                                ‡∏ø{book.price.toLocaleString(undefined, { minimumFractionDigits: 2 })}
                                            </p>
                                            <p className="text-sm text-gray-600">
                                                ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {book.qty.toLocaleString()} ‡∏ä‡∏¥‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°
                                            </p>
                                            {book.isbn && (
                                                <p className="text-xs text-gray-500">‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠ISBN: {book.isbn}</p>
                                            )}
                                        </div>
                                        <button
                                            onClick={() => addToCart(book)}
                                            className="px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl hover:from-green-600 hover:to-green-700 flex items-center gap-2 disabled:bg-gray-400 transition-all duration-200"
                                            disabled={book.qty <= 0}
                                        >
                                            <i className="fa fa-plus-circle"></i>
                                            ‡πÄ‡∏û‡∏¥‡πà‡∏°
                                        </button>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>

                    {/* Right Panel - Cart & Payment */}
                    <div className="lg:col-span-1 space-y-8">
                        <div className="bg-white rounded-2xl shadow-xl p-8 sticky top-8">
                            <div className="flex items-center mb-6">
                                <div className="bg-gradient-to-r from-purple-500 to-red-600 p-3 rounded-full mr-4">
                                    <i className="fa fa-shopping-cart text-white text-xl"></i>
                                </div>
                                <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-red-600 bg-clip-text text-transparent">
                                    ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ({cart.length})
                                </h2>
                            </div>
                            
                            {/* Cart List */}
                            <div className={`space-y-4 ${cart.length > 0 ? 'mb-6 max-h-72 overflow-y-auto pr-2' : ''}`}>
                                {cart.length === 0 ? (
                                    <div className="text-center py-10 text-gray-500 italic bg-gray-50 rounded-xl">
                                        <i className="fa fa-info-circle mr-2"></i>
                                        ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                                    </div>
                                ) : (
                                    cart.map((item) => (
                                        <div key={item.bookId} className="flex items-center gap-3 border-b border-gray-100 pb-3">
                                            <div className="flex-1">
                                                <h4 className="font-medium text-gray-800 line-clamp-1">{item.name}</h4>
                                                <p className="text-sm text-blue-600">
                                                    ‡∏ø{item.price.toLocaleString(undefined, { minimumFractionDigits: 2 })}
                                                </p>
                                            </div>
                                            <div className="flex items-center border border-gray-300 rounded-lg">
                                                <button
                                                    onClick={() => updateCartQty(item.bookId, item.qty - 1)}
                                                    className="px-2 py-1 text-gray-600 hover:bg-gray-100 rounded-l-lg"
                                                >
                                                    -
                                                </button>
                                                <input
                                                    type="number"
                                                    value={item.qty}
                                                    onChange={(e) => updateCartQty(item.bookId, parseInt(e.target.value) || 0)}
                                                    className="w-12 text-center border-x border-gray-300 focus:outline-none"
                                                    min="1"
                                                    max={item.maxQty}
                                                    onFocus={(e) => e.target.select()}
                                                />
                                                <button
                                                    onClick={() => updateCartQty(item.bookId, item.qty + 1)}
                                                    disabled={item.qty >= item.maxQty}
                                                    className="px-2 py-1 text-gray-600 hover:bg-gray-100 rounded-r-lg disabled:opacity-50"
                                                >
                                                    +
                                                </button>
                                            </div>
                                            <p className="font-semibold text-gray-700 text-lg w-20 text-right">
                                                ‡∏ø{(item.price * item.qty).toLocaleString(undefined, { minimumFractionDigits: 2 })}
                                            </p>
                                            <button
                                                onClick={() => removeFromCart(item.bookId)}
                                                className="text-red-500 hover:text-red-700 p-1"
                                                title="‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"
                                            >
                                                &times;
                                            </button>
                                        </div>
                                    ))
                                )}
                            </div>

                            {/* Redemption Section */}
                            {selectedMember && cart.length > 0 && (
                                <div className="mb-6 pt-4 border-t border-gray-100">
                                    <h4 className="font-bold text-gray-700 mb-3 flex items-center justify-between">
                                        <span className="flex items-center">
                                            <i className="fa fa-gift text-yellow-500 mr-2"></i>
                                            ‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°
                                        </span>
                                        <span className="text-sm font-normal text-gray-500">
                                            (‡∏°‡∏µ: {selectedMember.points.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°)
                                        </span>
                                    </h4>
                                    <div className="flex gap-2">
                                        <input
                                            type="number"
                                            placeholder={`‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${maxRedeemablePoints.toLocaleString()}`}
                                            className="flex-1 px-4 py-3 border border-yellow-300 rounded-xl focus:border-yellow-500 focus:outline-none bg-yellow-50 text-yellow-800 font-semibold"
                                            value={pointsToRedeem > 0 ? pointsToRedeem.toString() : ''}
                                            onChange={(e) => handlePointsChange(e.target.value)}
                                            min="0"
                                            max={maxRedeemablePoints}
                                        />
                                        <button
                                            onClick={useAllPoints}
                                            className="px-4 py-3 bg-yellow-500 text-white rounded-xl hover:bg-yellow-600 disabled:opacity-50 transition-all duration-200 text-sm"
                                            disabled={maxRedeemablePoints === 0}
                                        >
                                            ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                                        </button>
                                    </div>
                                    {discount > 0 && (
                                        <p className="text-sm text-green-600 mt-2 font-medium">
                                            ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏ï‡πâ‡∏°: ‡∏ø{discount.toLocaleString(undefined, { minimumFractionDigits: 2 })}
                                        </p>
                                    )}
                                </div>
                            )}


                            {/* Summary Totals */}
                            <div className="space-y-2 border-t pt-4 border-gray-200">
                                <div className="flex justify-between text-lg text-gray-600">
                                    <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Subtotal)</span>
                                    <span className="font-medium">‡∏ø{subtotal.toLocaleString(undefined, { minimumFractionDigits: 2 })}</span>
                                </div>
                                {discount > 0 && (
                                    <div className="flex justify-between text-lg text-red-500">
                                        <span>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (Redeem Points)</span>
                                        <span className="font-medium">- ‡∏ø{discount.toLocaleString(undefined, { minimumFractionDigits: 2 })}</span>
                                    </div>
                                )}
                                <div className="flex justify-between text-2xl font-bold pt-2 border-t border-gray-200">
                                    <span className="text-gray-800">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (Net Total)</span>
                                    <span className="bg-gradient-to-r from-red-600 to-purple-600 bg-clip-text text-transparent">
                                        ‡∏ø{total.toLocaleString(undefined, { minimumFractionDigits: 2 })}
                                    </span>
                                </div>
                            </div>

                            {/* Payment Section */}
                            <div className="mt-6 pt-4 border-t border-gray-200">
                                <h4 className="font-bold text-gray-700 mb-3">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h4>
                                <div className="flex gap-4 mb-4">
                                    <label className={`flex-1 flex items-center justify-center p-3 rounded-xl border-2 cursor-pointer transition-colors ${
                                        paymentMethod === 'cash' ? 'border-blue-500 bg-blue-50 text-blue-700 font-medium' : 'border-gray-200 text-gray-600 hover:bg-gray-50'
                                    }`}>
                                        <input
                                            type="radio"
                                            name="paymentMethod"
                                            value="cash"
                                            checked={paymentMethod === 'cash'}
                                            onChange={() => setPaymentMethod('cash')}
                                            className="hidden"
                                        />
                                        <i className="fa fa-money-bill-wave mr-2"></i> ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
                                    </label>
                                    <label className={`flex-1 flex items-center justify-center p-3 rounded-xl border-2 cursor-pointer transition-colors ${
                                        paymentMethod === 'transfer' ? 'border-blue-500 bg-blue-50 text-blue-700 font-medium' : 'border-gray-200 text-gray-600 hover:bg-gray-50'
                                    }`}>
                                        <input
                                            type="radio"
                                            name="paymentMethod"
                                            value="transfer"
                                            checked={paymentMethod === 'transfer'}
                                            onChange={() => setPaymentMethod('transfer')}
                                            className="hidden"
                                        />
                                        <i className="fa fa-qrcode mr-2"></i> ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                                    </label>
                                </div>

                                {paymentMethod === 'cash' && total > 0 && (
                                    <div className="mb-4">
                                        <label className="block text-sm font-medium text-gray-700 mb-1">‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏£‡∏±‡∏ö (Cash Paid)</label>
                                        <input
                                            type="number"
                                            placeholder={`‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ‡∏ø${total.toFixed(2)}`}
                                            className="w-full px-4 py-3 border-2 border-green-300 rounded-xl focus:border-green-500 focus:outline-none text-xl font-bold text-green-700"
                                            value={cashPaid}
                                            onChange={(e) => setCashPaid(parseFloat(e.target.value) || '')}
                                            min={total}
                                            onFocus={(e) => e.target.select()}
                                        />
                                        <div className="flex justify-end mt-2">
                                            <button 
                                                onClick={() => setCashPaid(total)}
                                                className="text-sm text-blue-500 hover:text-blue-700"
                                                title="‡∏Å‡∏£‡∏≠‡∏Å‡∏û‡∏≠‡∏î‡∏µ"
                                            >
                                                ‡∏à‡πà‡∏≤‡∏¢‡∏û‡∏≠‡∏î‡∏µ
                                            </button>
                                        </div>
                                    </div>
                                )}
                                
                                {paymentMethod === 'cash' && change > 0 && (
                                    <div className="flex justify-between text-2xl font-bold text-green-600 bg-green-50 p-3 rounded-xl mb-4">
                                        <span>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</span>
                                        <span>‡∏ø{change.toLocaleString(undefined, { minimumFractionDigits: 2 })}</span>
                                    </div>
                                )}
                            </div>

                            {/* Process Sale Button */}
                            <button
                                onClick={processSale}
                                className="w-full py-4 bg-gradient-to-r from-red-600 to-pink-600 text-white text-xl font-bold rounded-xl hover:from-red-700 hover:to-pink-700 transition-all duration-200 shadow-lg shadow-red-300/50 disabled:opacity-50 disabled:shadow-none flex items-center justify-center gap-3"
                                disabled={loading || cart.length === 0 || (paymentMethod === 'cash' && (typeof cashPaid !== 'number' || cashPaid < total))}
                            >
                                <i className="fa fa-cash-register"></i>
                                {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...' : `‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡∏ø${total.toLocaleString(undefined, { minimumFractionDigits: 2 })}`}
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}